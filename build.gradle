apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'

version = '1.1.0'

check.dependsOn jacocoTestReport

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

compileJava {
    doFirst {
        println "Using Java Version for compilation: " + JavaVersion.current()
    }
}

repositories {
    mavenCentral()
} 


sourceCompatibility=1.8
targetCompatibility=1.8

dependencies {
	compile 'org.yaml:snakeyaml:1.25'
	compile 'org.slf4j:slf4j-api:1.7.+'
  	compile 'org.apache.commons:commons-lang3:3.+'
  	compile 'commons-io:commons-io:2.6'
  	compile 'commons-beanutils:commons-beanutils:1.9.+'
  	
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.5.+'
	testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.apache.logging.log4j:log4j-api:2.9.+'
    testCompile 'org.apache.logging.log4j:log4j-core:2.9.+'
    testCompile 'org.apache.logging.log4j:log4j-slf4j-impl:2.9.+'
    
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.+';
}

test {
  useJUnitPlatform()
}

jar {
    into ('META-INF') {
        from ('.') {
            include 'README.md','LICENCE.txt','LICENCE-3RD-PARTY.txt'
        }
    }
    manifest {
        attributes 'Implementation-Title': 'Snakeyaml-Anno', 'Implementation-Version': version
    }
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts { // invoke with 'gradle build'
    archives sourcesJar
    archives javadocJar
}